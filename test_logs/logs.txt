First run:
Categorical w/ relu, accuracy
Epoch 50/50
25/25 [==============================] - 3s 93ms/step - loss: 0.9096 - accuracy: 0.5546 - val_loss: 1.0365 - val_accuracy: 0.4518

Second run:
Epoch 50/50
25/25 [==============================] - 3s 94ms/step - loss: 0.9101 - accuracy: 0.5571 - val_loss: 1.0225 - val_accuracy: 0.4924

Third run: with Augmented images async
Epoch 50/50
25/25 [==============================] - 3s 100ms/step - loss: 0.9543 - accuracy: 0.5038 - val_loss: 1.0548 - val_accuracy: 0.4365

Fourth run: with fixed model code and successful image augmentation
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 9s 330ms/step - accuracy: 0.8884 - loss: 0.3056 - val_accuracy: 0.6294 - val_loss: 1.1919

Fifth run: Use softmax for activation
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 6s 224ms/step - accuracy: 0.9052 - loss: 0.2286 - val_accuracy: 0.5990 - val_loss: 1.4583

Sixth run: Added random zoom to address overfitting
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 7s 240ms/step - accuracy: 0.8749 - loss: 0.3267 - val_accuracy: 0.6497 - val_loss: 1.0710

Seventh run: Added horizontal and vertical to augmentation
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 7s 270ms/step - accuracy: 0.7611 - loss: 0.5667 - val_accuracy: 0.4315 - val_loss: 1.5054

Eight run: Use SGD as optimizer
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 5s 188ms/step - accuracy: 0.7554 - loss: 0.6000 - val_accuracy: 0.5584 - val_loss: 1.2051

Ninth run: Remove zoom as augment, remove from_logit
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 6s 200ms/step - accuracy: 0.7455 - loss: 0.5939 - val_accuracy: 0.5584 - val_loss: 1.7366

10th run: Replace image size to 128x128
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 15s 590ms/step - accuracy: 0.7598 - loss: 0.5496 - val_accuracy: 0.6599 - val_loss: 0.9330

11th run: Added back Adam as optimizer with learning rate 0.001
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 14s 529ms/step - accuracy: 0.8287 - loss: 0.4255 - val_accuracy: 0.5584 - val_loss: 2.1104

12th run: Reduce epochs to 30
Epoch 30/30
25/25 ━━━━━━━━━━━━━━━━━━━━ 19s 744ms/step - accuracy: 0.7574 - loss: 0.5425 - val_accuracy: 0.6650 - val_loss: 0.6967

13th run: Attempt to rewrite for readable code
Epoch 30/30
25/25 ━━━━━━━━━━━━━━━━━━━━ 7s 258ms/step - accuracy: 0.7645 - loss: 0.5485 - val_accuracy: 0.6904 - val_loss: 0.6233

14th run: Use RMS optimizer with ReduceLROnPlateau callback
Epoch 30/30
25/25 ━━━━━━━━━━━━━━━━━━━━ 5s 185ms/step - accuracy: 0.7024 - loss: 0.6219 - val_accuracy: 0.6650 - val_loss: 0.7551

15th run: Try EPOCH to 50
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 6s 198ms/step - accuracy: 0.7985 - loss: 0.4780 - val_accuracy: 0.6954 - val_loss: 0.8149

16th run: Try early stopping and EPOCHS to 30, patience = 5
Epoch 30/30
25/25 ━━━━━━━━━━━━━━━━━━━━ 4s 152ms/step - accuracy: 0.7258 - loss: 0.6130 - val_accuracy: 0.6294 - val_loss: 0.8923

17th run: New Model Architecture
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 2s 59ms/step - accuracy: 0.8225 - loss: 0.4739 - val_accuracy: 0.5612 - val_loss: 1.1106

18th run: Added BatchNormalization and Regularization
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 3s 92ms/step - accuracy: 0.5755 - loss: 0.9040 - val_accuracy: 0.5459 - val_loss: 1.1103

19th run: Added strides, and GlobalPooling to Dense Layers. Also added Dropout for Dense Layers and dropped to 64
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 3s 114ms/step - accuracy: 0.7280 - loss: 0.8958 - val_accuracy: 0.4949 - val_loss: 1.2946

20th run: Try GlobalAveragePooling2D(), and drop Dense to 32
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 4s 150ms/step - accuracy: 0.6419 - loss: 0.9213 - val_accuracy: 0.4337 - val_loss: 1.1836

21st run: Try Image to 256
Epoch 50/50
25/25 ━━━━━━━━━━━━━━━━━━━━ 11s 434ms/step - accuracy: 0.6668 - loss: 0.8919 - val_accuracy: 0.5153 - val_loss: 1.0632

